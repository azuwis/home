#!/bin/sh

PANEL_HEIGHT=26
PANEL_FONT_FAMILY1="Sans:style=italic:size=9"
PANEL_FONT_FAMILY2="WenQuanYi Micro Hei:slant=100:size=9"
PANEL_FONT_FAMILY3="FontAwesome:size=9"
PANEL_FIFO="${XDG_CACHE_HOME:-"$HOME/.cache"}/panel-info"

COLOR_FOREGROUND='#FFA3A6AB'
COLOR_BACKGROUND='#FF080808'
COLOR_ACTIVE_MONITOR_FG='#FF080808'
COLOR_ACTIVE_MONITOR_BG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_FG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_BG='#FF080808'
COLOR_FOCUSED_OCCUPIED_FG='#FFF6F9FF'
COLOR_FOCUSED_OCCUPIED_BG='#FF5C5955'
COLOR_FOCUSED_FREE_FG='#FFF6F9FF'
COLOR_FOCUSED_FREE_BG='#FF6D561C'
COLOR_FOCUSED_URGENT_FG='#FF080808'
COLOR_FOCUSED_URGENT_BG='#FFF9A299'
COLOR_OCCUPIED_FG='#FFA3A6AB'
COLOR_OCCUPIED_BG='#FF080808'
COLOR_FREE_FG='#FF6F7277'
COLOR_FREE_BG='#FF080808'
COLOR_URGENT_FG='#FFF9A299'
COLOR_URGENT_BG='#FF080808'
COLOR_LAYOUT_FG='#FF6F7277'
COLOR_LAYOUT_BG='#FF080808'
COLOR_TITLE_FG='#FFA3A6AB'
COLOR_TITLE_BG='#FF080808'
COLOR_STATUS_FG='#FFA3A6AB'
COLOR_STATUS_BG='#FF080808'

if [ "$(pgrep -cx panel)" -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -i60 -sf 'S %d %b  %H:%M' > "$PANEL_FIFO" &
battery -i60 -sf 'B%s:%i' > "$PANEL_FIFO" &
essid -i60 -sf 'E %s' > "$PANEL_FIFO" &

disk() {
    while : ;do
        local diskinfo
        diskinfo="$(df --human-readable --output=avail "${HOME}")"
        echo "D ${diskinfo#* }"
        sleep 600
    done
}
disk > "$PANEL_FIFO" &

panel_bar() {
    num_mon=$(bspc query -M | wc -l)

    while read -r line ; do
        case $line in
            S*)
                # clock output
                sys_infos="%{F$COLOR_STATUS_FG}%{B$COLOR_STATUS_BG} ${line#?} %{B-}%{F-}"
                ;;
            T*)
                # xtitle output
                title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line#?} %{B-}%{F-}"
                ;;
            E*)
                # wifi output
                essid_infos="%{F$COLOR_STATUS_FG}%{B$COLOR_STATUS_BG} ${line#?} %{B-}%{F-}"
                ;;
            D*)
                # disk info
                disk_infos="%{F$COLOR_STATUS_FG}%{B$COLOR_STATUS_BG} ${line#?} %{B-}%{F-}"
                ;;
            B*)
                # battery info
                local batt="${line#?}"
                local status="${batt%:*}"
                local capacity="${batt#*:}"
                local icon=""
                case "$status" in
                    Full)
                        icon=""
                        ;;
                    Charging|Discharging)
                        if [ "$capacity" -gt 90 ]; then
                            icon=""
                        elif [ "$capacity" -gt 65 ]; then
                            icon=""
                        elif [ "$capacity" -gt 40 ]; then
                            icon=""
                        elif [ "$capacity" -gt 15 ]; then
                            icon=""
                        else
                            icon=""
                        fi
                        if [ x"$status" = x"Charging" ]; then
                            icon="${icon} "
                        fi
                        ;;
                esac
                batt_infos="%{F$COLOR_STATUS_FG}%{B$COLOR_STATUS_BG} ${icon} ${capacity}% %{B-}%{F-}"
                ;;
            W*)
                # bspwm internal state
                wm_infos=""
                IFS=':'
                set -- ${line#?}
                while [ $# -gt 0 ] ; do
                    item=$1
                    name=${item#?}
                    case $item in
                        M*)
                            # active monitor
                            if [ "$num_mon" -gt 1 ] ; then
                                wm_infos="$wm_infos %{F$COLOR_ACTIVE_MONITOR_FG}%{B$COLOR_ACTIVE_MONITOR_BG} ${name} %{B-}%{F-}  "
                            fi
                            ;;
                        m*)
                            # inactive monitor
                            if [ "$num_mon" -gt 1 ] ; then
                                wm_infos="$wm_infos %{F$COLOR_INACTIVE_MONITOR_FG}%{B$COLOR_INACTIVE_MONITOR_BG} ${name} %{B-}%{F-}  "
                            fi
                            ;;
                        O*)
                            # focused occupied desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_OCCUPIED_FG}%{B$COLOR_FOCUSED_OCCUPIED_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
                            ;;
                        F*)
                            # focused free desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_FREE_FG}%{B$COLOR_FOCUSED_FREE_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
                            ;;
                        U*)
                            # focused urgent desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_URGENT_FG}%{B$COLOR_FOCUSED_URGENT_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
                            ;;
                        o*)
                            # occupied desktop
                            wm_infos="${wm_infos}%{F$COLOR_OCCUPIED_FG}%{B$COLOR_OCCUPIED_BG} ${name} %{B-}%{F-}"
                            ;;
                        f*)
                            # free desktop
                            wm_infos="${wm_infos}%{F$COLOR_FREE_FG}%{B$COLOR_FREE_BG} ${name} %{B-}%{F-}"
                            ;;
                        u*)
                            # urgent desktop
                            wm_infos="${wm_infos}%{F$COLOR_URGENT_FG}%{B$COLOR_URGENT_BG} ${name} %{B-}%{F-}"
                            ;;
                        L*)
                            # layout
                            local layout
                            if [ x"${name}" = x"T" ]; then
                                layout=""
                            elif [ x"${name}" = x"M" ]; then
                                layout=""
                            else
                                layout="${name}"
                            fi
                            wm_infos="$wm_infos  %{F$COLOR_LAYOUT_FG}%{B$COLOR_LAYOUT_BG} ${layout} %{B-}%{F-}"
                            ;;
                    esac
                    shift
                done
                ;;
        esac
        printf "%s\n" "%{l}${wm_infos}%{c}${title}%{r}${disk_infos}${essid_infos}${batt_infos}${sys_infos}"
    done
}

panel_bar < "$PANEL_FIFO" | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY1" -f "$PANEL_FONT_FAMILY2" -f "$PANEL_FONT_FAMILY3" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" &

wait
