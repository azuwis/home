#!/bin/sh

volume() {
    local action="$1"

    local item="PCM"
    amixer sget Master > /dev/null 2>&1 && item="Master"

    local result
    result="$(amixer sset "$item" "$action")"

    local volume="${result#*\[}"
    volume="${volume%%\%\]*}"

    local status="${result##*\[}"
    status="${status%\]}"

    local icon
    if [ x"$status" = x"off" ]; then
        icon="  Mute"
    else
        icon=""
    fi
    notify-send ":Adjust:" -i "${icon}" -h int:value:"${volume}"
}

brightness() {
    local action="$1"
    local brightness_syspath="$2"
    local icon="$3"

    local brightness_file="${brightness_syspath}/brightness"
    local max_brightness_file="${brightness_syspath}/max_brightness"

    local brightness
    read brightness < "${brightness_file}"

    local max_brightness
    read max_brightness < "${max_brightness_file}"

    local wanted_brightness
    case "$action" in
        +[0-9]|+[0-9][0-9]|-[0-9]|-[0-9][0-9])
            wanted_brightness="$(( brightness + max_brightness * action / 100 ))"
            ;;
        [0-9]|[0-9][0-9]|100)
            wanted_brightness="$(( max_brightness * action / 100 ))"
            ;;
        *)
            return
            ;;
    esac

    test "${wanted_brightness}" -gt "${max_brightness}" && wanted_brightness="${max_brightness}"
    test "${wanted_brightness}" -lt 0 && wanted_brightness=1

    echo "${wanted_brightness}" > "${brightness_file}"

    notify-send ":Adjust:" -i "$icon" -h int:value:"$(( wanted_brightness * 100 / max_brightness ))"
}

backlight() {
    local action="$1"
    brightness_file="$(find /sys/class/backlight/*/brightness 2>/dev/null | head -n1)"
    test x"${brightness_file}" = x && return
    local brightness_syspath="${brightness_file%/*}"
    brightness "$action" "$brightness_syspath" 
}

kbdlight() {
    local action="$1"
    local brightness_syspath="/sys/class/leds/smc::kbd_backlight"
    test ! -e "${brightness_syspath}" && return
    brightness "$action" "$brightness_syspath" 
}

"$@"
